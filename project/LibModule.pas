unit LibModule;

interface

const n=5; //количество строк и столбцов в матрице А

var
   a:array[1..n,1..n] of real; //объявление матрицы А
   x:array[1..n] of real;      //объявление вектора Х
   procedure matric; //процедура расчета элементов матрицы А
   procedure vector; //процедура расчета элементов вектора Х
   function g:real;  //функция G

implementation

uses math;

//процедура расчета элементов матрицы А
procedure matric;
var
i,j: integer; //объявление счетчиков
begin
   for i:= 1 to n do    //счетчик строк
      for j:= 1 to n do //счетчик столбцов
       //формула для расчета элементов матрицы А
       a[i,j]:=power(4,(-i-j))*power(3,(i+j))*cos((i*Pi)/6);
end;

//процедура расчета элементов вектора Х
procedure vector;
var
   i,j,z: integer; //обявление счетчиков
   min: real;      //объявление минимального значения
begin
//задание минимального значения квадрата первого элемента
   min:=power(a[1,1],2);
   for i:=1 to n do //счетчик строк
      for j:=1 to n do //счетчик столбцов
//сравнение минимального квадрата элемента с текущим квадратом элемента
         if min>power(a[i,j],2)
           then //если истинно
           begin
//присвоение минимального значения квадрата текущего элемента
              min:=power(a[i,j],2);
              z:=j; //запоминание столбца матрицы А
           end;
   for i:=1 to n do
      x[i]:=a[i,z]; //запоминание элементов вектора Х
end;

//расчет функции G
function g:real;
var
   i,k,z: integer; //объявление счетчиков
   s,p: real;  //объявление суммы, произведения
begin
  s:=0; //обнуление суммы
  for i:=1 to n do //массив для расчета суммы
     begin
      p:=1; //присвоение произведению 1
      for k:=1 to i do //массив для расчета произведения
      p:=p*(1+x[k]); //формула для расчета произведения
      s:=s+(x[i]-2)/p; //формула для расчета суммы
     end;
  g:=4*ln(abs(s)); //формула для расчета функции
end;

end.
